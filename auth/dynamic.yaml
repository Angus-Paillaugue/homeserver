tls:
  stores:
    default:
      defaultCertificate:
        certFile: /certs/home.lan.crt.pem
        keyFile: /certs/home.lan.key.pem

http:
  routers:
    tinyauth:
      rule: Host(`tinyauth.home.lan`)
      entryPoints:
        - websecure
      service: tinyauth
      tls: {}

    proxmox:
      rule: Host(`proxmox.home.lan`)
      service: proxmox
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    my-speed:
      rule: Host(`my-speed.home.lan`)
      service: my-speed
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    gitea:
      rule: Host(`gitea.home.lan`)
      service: gitea
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    translate:
      rule: Host(`translate.home.lan`)
      service: translate
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    wikipedia:
      rule: Host(`wikipedia.home.lan`)
      service: wikipedia
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    ha:
      rule: Host(`ha.home.lan`)
      service: ha
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    navidrome:
      rule: Host(`navidrome.home.lan`)
      service: navidrome
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    jellyfin:
      rule: Host(`jellyfin.home.lan`)
      service: jellyfin
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    immich:
      rule: Host(`immich.home.lan`)
      service: immich
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    transmission:
      rule: Host(`transmission.home.lan`)
      service: transmission
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    jellyseer:
      rule: Host(`jellyseer.home.lan`)
      service: jellyseer
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    jackett:
      rule: Host(`jackett.home.lan`)
      service: jackett
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    bazarr:
      rule: Host(`bazarr.home.lan`)
      service: bazarr
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    prowlarr:
      rule: Host(`prowlarr.home.lan`)
      service: prowlarr
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    radarr:
      rule: Host(`radarr.home.lan`)
      service: radarr
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    sonarr:
      rule: Host(`sonarr.home.lan`)
      service: sonarr
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    watcharr:
      rule: Host(`watcharr.home.lan`)
      service: watcharr
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    openwebui:
      rule: Host(`openwebui.home.lan`)
      service: openwebui
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    vaultwarden:
      rule: Host(`vaultwarden.home.lan`)
      service: vaultwarden
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    search:
      rule: Host(`search.home.lan`)
      service: search
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

    homepage:
      rule: Host(`homepage.home.lan`)
      service: homepage
#      middlewares:
#        - tinyauth
      entryPoints:
        - websecure
      tls: {}

  services:
    tinyauth:
      loadBalancer:
        servers:
          - url: "http://tinyauth:3000"

    ha:
      loadBalancer:
        servers:
          - url: "http://192.168.0.2:8123"

    my-speed:
      loadBalancer:
        servers:
          - url: "http://192.168.0.17:5216"

    gitea:
      loadBalancer:
        servers:
          - url: "http://192.168.0.15"

    proxmox:
      loadBalancer:
        servers:
          - url: "https://192.168.0.3:8006"

    translate:
      loadBalancer:
        servers:
          - url: "http://192.168.0.16:5000"

    wikipedia:
      loadBalancer:
        servers:
          - url: "http://192.168.0.7:8080"

    navidrome:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8098"

    jellyfin:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8080"

    immich:
      loadBalancer:
        servers:
          - url: "http://192.168.0.5:8082"

    transmission:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8083"

    jellyseer:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8094"

    jackett:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8093"

    bazarr:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8092"

    prowlarr:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8096"

    radarr:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8091"

    sonarr:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8090"

    watcharr:
      loadBalancer:
        servers:
          - url: "http://192.168.0.6:8099"

    openwebui:
      loadBalancer:
        servers:
          - url: "http://192.168.0.7:8084"

    vaultwarden:
      loadBalancer:
        servers:
          - url: "http://192.168.0.5:8081"

    search:
      loadBalancer:
        servers:
          - url: "http://192.168.0.7:8089"

    homepage:
      loadBalancer:
        servers:
          - url: "http://192.168.0.7:8088"

  middlewares:
    tinyauth:
      forwardAuth:
        address: "http://tinyauth:3000/api/auth/traefik"
        trustForwardHeader: true

    ipwhitelist:
      ipWhiteList:
        sourceRange:
          - "192.168.0.5/32"
          - "192.168.0.6/32"
          - "192.168.0.7/32"
          - "192.168.0.8/32"
          - "192.168.0.9/32"
          - "192.168.0.10/32"
          - "192.168.0.11/32"
